//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Actions_Books", "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Books), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Actions), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Actions_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Employee), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Actions), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Actions_Status", "Status", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Status), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Actions), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Actions_Student", "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Student), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Actions), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Actions_Teacher", "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Teachers), "Actions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Actions), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Books_EBook", "EBook", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.EBook), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Books), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Books_Publication", "Publication", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Publication), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Books), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Books_Shelving", "Shelving", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Shelving), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Books), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Books_Writer", "Writer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Writer), "Books", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Books), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Group_Faculty", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Faculty), "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Group), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Teachers_Faculty", "Faculty", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Faculty), "Teachers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Teachers), true)]
[assembly: EdmRelationshipAttribute("DBUniversityModel1", "FK_Student_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LibraryUniversity.Model.Group), "Student", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LibraryUniversity.Model.Student), true)]

#endregion

namespace LibraryUniversity.Model
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class DBUniversityLibraryEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект DBUniversityLibraryEntities, используя строку соединения из раздела "DBUniversityLibraryEntities" файла конфигурации приложения.
        /// </summary>
        public DBUniversityLibraryEntities() : base("name=DBUniversityLibraryEntities", "DBUniversityLibraryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DBUniversityLibraryEntities.
        /// </summary>
        public DBUniversityLibraryEntities(string connectionString) : base(connectionString, "DBUniversityLibraryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DBUniversityLibraryEntities.
        /// </summary>
        public DBUniversityLibraryEntities(EntityConnection connection) : base(connection, "DBUniversityLibraryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Actions> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Actions>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Actions> _Actions;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Books> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Books>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Books> _Books;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<EBook> EBook
        {
            get
            {
                if ((_EBook == null))
                {
                    _EBook = base.CreateObjectSet<EBook>("EBook");
                }
                return _EBook;
            }
        }
        private ObjectSet<EBook> _EBook;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Faculty> Faculty
        {
            get
            {
                if ((_Faculty == null))
                {
                    _Faculty = base.CreateObjectSet<Faculty>("Faculty");
                }
                return _Faculty;
            }
        }
        private ObjectSet<Faculty> _Faculty;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Group> Group
        {
            get
            {
                if ((_Group == null))
                {
                    _Group = base.CreateObjectSet<Group>("Group");
                }
                return _Group;
            }
        }
        private ObjectSet<Group> _Group;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Publication> Publication
        {
            get
            {
                if ((_Publication == null))
                {
                    _Publication = base.CreateObjectSet<Publication>("Publication");
                }
                return _Publication;
            }
        }
        private ObjectSet<Publication> _Publication;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Shelving> Shelving
        {
            get
            {
                if ((_Shelving == null))
                {
                    _Shelving = base.CreateObjectSet<Shelving>("Shelving");
                }
                return _Shelving;
            }
        }
        private ObjectSet<Shelving> _Shelving;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Status> Status
        {
            get
            {
                if ((_Status == null))
                {
                    _Status = base.CreateObjectSet<Status>("Status");
                }
                return _Status;
            }
        }
        private ObjectSet<Status> _Status;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Student> Student
        {
            get
            {
                if ((_Student == null))
                {
                    _Student = base.CreateObjectSet<Student>("Student");
                }
                return _Student;
            }
        }
        private ObjectSet<Student> _Student;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Teachers> Teachers
        {
            get
            {
                if ((_Teachers == null))
                {
                    _Teachers = base.CreateObjectSet<Teachers>("Teachers");
                }
                return _Teachers;
            }
        }
        private ObjectSet<Teachers> _Teachers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Writer> Writer
        {
            get
            {
                if ((_Writer == null))
                {
                    _Writer = base.CreateObjectSet<Writer>("Writer");
                }
                return _Writer;
            }
        }
        private ObjectSet<Writer> _Writer;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Actions. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToActions(Actions actions)
        {
            base.AddObject("Actions", actions);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Books. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBooks(Books books)
        {
            base.AddObject("Books", books);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet EBook. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEBook(EBook eBook)
        {
            base.AddObject("EBook", eBook);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Employee. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Faculty. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToFaculty(Faculty faculty)
        {
            base.AddObject("Faculty", faculty);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Group. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToGroup(Group group)
        {
            base.AddObject("Group", group);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Publication. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToPublication(Publication publication)
        {
            base.AddObject("Publication", publication);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Shelving. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToShelving(Shelving shelving)
        {
            base.AddObject("Shelving", shelving);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Status. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStatus(Status status)
        {
            base.AddObject("Status", status);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Student. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToStudent(Student student)
        {
            base.AddObject("Student", student);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet sysdiagrams. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Teachers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTeachers(Teachers teachers)
        {
            base.AddObject("Teachers", teachers);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Writer. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToWriter(Writer writer)
        {
            base.AddObject("Writer", writer);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Actions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Actions : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Actions.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Actions CreateActions(global::System.Int32 id)
        {
            Actions actions = new Actions();
            actions.id = id;
            return actions;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_status
        {
            get
            {
                return _id_status;
            }
            set
            {
                Onid_statusChanging(value);
                ReportPropertyChanging("id_status");
                _id_status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_status");
                Onid_statusChanged();
            }
        }
        private Nullable<global::System.Int32> _id_status;
        partial void Onid_statusChanging(Nullable<global::System.Int32> value);
        partial void Onid_statusChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private Nullable<global::System.DateTime> _date;
        partial void OndateChanging(Nullable<global::System.DateTime> value);
        partial void OndateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_book
        {
            get
            {
                return _id_book;
            }
            set
            {
                Onid_bookChanging(value);
                ReportPropertyChanging("id_book");
                _id_book = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_book");
                Onid_bookChanged();
            }
        }
        private Nullable<global::System.Int32> _id_book;
        partial void Onid_bookChanging(Nullable<global::System.Int32> value);
        partial void Onid_bookChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_employee
        {
            get
            {
                return _id_employee;
            }
            set
            {
                Onid_employeeChanging(value);
                ReportPropertyChanging("id_employee");
                _id_employee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_employee");
                Onid_employeeChanged();
            }
        }
        private Nullable<global::System.Int32> _id_employee;
        partial void Onid_employeeChanging(Nullable<global::System.Int32> value);
        partial void Onid_employeeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_student
        {
            get
            {
                return _id_student;
            }
            set
            {
                Onid_studentChanging(value);
                ReportPropertyChanging("id_student");
                _id_student = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_student");
                Onid_studentChanged();
            }
        }
        private Nullable<global::System.Int32> _id_student;
        partial void Onid_studentChanging(Nullable<global::System.Int32> value);
        partial void Onid_studentChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_teacher
        {
            get
            {
                return _id_teacher;
            }
            set
            {
                Onid_teacherChanging(value);
                ReportPropertyChanging("id_teacher");
                _id_teacher = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_teacher");
                Onid_teacherChanged();
            }
        }
        private Nullable<global::System.Int32> _id_teacher;
        partial void Onid_teacherChanging(Nullable<global::System.Int32> value);
        partial void Onid_teacherChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Books", "Books")]
        public Books Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("DBUniversityModel1.FK_Actions_Books", "Books").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("DBUniversityModel1.FK_Actions_Books", "Books").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Books> BooksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Books>("DBUniversityModel1.FK_Actions_Books", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Books>("DBUniversityModel1.FK_Actions_Books", "Books", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DBUniversityModel1.FK_Actions_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DBUniversityModel1.FK_Actions_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DBUniversityModel1.FK_Actions_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DBUniversityModel1.FK_Actions_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Status", "Status")]
        public Status Status
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("DBUniversityModel1.FK_Actions_Status", "Status").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("DBUniversityModel1.FK_Actions_Status", "Status").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Status> StatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Status>("DBUniversityModel1.FK_Actions_Status", "Status");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Status>("DBUniversityModel1.FK_Actions_Status", "Status", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Student", "Student")]
        public Student Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBUniversityModel1.FK_Actions_Student", "Student").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBUniversityModel1.FK_Actions_Student", "Student").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Student> StudentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Student>("DBUniversityModel1.FK_Actions_Student", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Student>("DBUniversityModel1.FK_Actions_Student", "Student", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Teacher", "Teachers")]
        public Teachers Teachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teachers>("DBUniversityModel1.FK_Actions_Teacher", "Teachers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teachers>("DBUniversityModel1.FK_Actions_Teacher", "Teachers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teachers> TeachersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teachers>("DBUniversityModel1.FK_Actions_Teacher", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teachers>("DBUniversityModel1.FK_Actions_Teacher", "Teachers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Books")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Books : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Books.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Books CreateBooks(global::System.Int32 id)
        {
            Books books = new Books();
            books.id = id;
            return books;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> year
        {
            get
            {
                return _year;
            }
            set
            {
                OnyearChanging(value);
                ReportPropertyChanging("year");
                _year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("year");
                OnyearChanged();
            }
        }
        private Nullable<global::System.DateTime> _year;
        partial void OnyearChanging(Nullable<global::System.DateTime> value);
        partial void OnyearChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                OnISBNChanging(value);
                ReportPropertyChanging("ISBN");
                _ISBN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ISBN");
                OnISBNChanged();
            }
        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> pages
        {
            get
            {
                return _pages;
            }
            set
            {
                OnpagesChanging(value);
                ReportPropertyChanging("pages");
                _pages = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pages");
                OnpagesChanged();
            }
        }
        private Nullable<global::System.Int32> _pages;
        partial void OnpagesChanging(Nullable<global::System.Int32> value);
        partial void OnpagesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> count
        {
            get
            {
                return _count;
            }
            set
            {
                OncountChanging(value);
                ReportPropertyChanging("count");
                _count = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("count");
                OncountChanged();
            }
        }
        private Nullable<global::System.Int32> _count;
        partial void OncountChanging(Nullable<global::System.Int32> value);
        partial void OncountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_ebook
        {
            get
            {
                return _id_ebook;
            }
            set
            {
                Onid_ebookChanging(value);
                ReportPropertyChanging("id_ebook");
                _id_ebook = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_ebook");
                Onid_ebookChanged();
            }
        }
        private Nullable<global::System.Int32> _id_ebook;
        partial void Onid_ebookChanging(Nullable<global::System.Int32> value);
        partial void Onid_ebookChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_writer
        {
            get
            {
                return _id_writer;
            }
            set
            {
                Onid_writerChanging(value);
                ReportPropertyChanging("id_writer");
                _id_writer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_writer");
                Onid_writerChanged();
            }
        }
        private Nullable<global::System.Int32> _id_writer;
        partial void Onid_writerChanging(Nullable<global::System.Int32> value);
        partial void Onid_writerChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_publication
        {
            get
            {
                return _id_publication;
            }
            set
            {
                Onid_publicationChanging(value);
                ReportPropertyChanging("id_publication");
                _id_publication = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_publication");
                Onid_publicationChanged();
            }
        }
        private Nullable<global::System.Int32> _id_publication;
        partial void Onid_publicationChanging(Nullable<global::System.Int32> value);
        partial void Onid_publicationChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_shelving
        {
            get
            {
                return _id_shelving;
            }
            set
            {
                Onid_shelvingChanging(value);
                ReportPropertyChanging("id_shelving");
                _id_shelving = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_shelving");
                Onid_shelvingChanged();
            }
        }
        private Nullable<global::System.Int32> _id_shelving;
        partial void Onid_shelvingChanging(Nullable<global::System.Int32> value);
        partial void Onid_shelvingChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Books", "Actions")]
        public EntityCollection<Actions> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Books", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Books", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_EBook", "EBook")]
        public EBook EBook
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EBook>("DBUniversityModel1.FK_Books_EBook", "EBook").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EBook>("DBUniversityModel1.FK_Books_EBook", "EBook").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EBook> EBookReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EBook>("DBUniversityModel1.FK_Books_EBook", "EBook");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EBook>("DBUniversityModel1.FK_Books_EBook", "EBook", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_Publication", "Publication")]
        public Publication Publication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("DBUniversityModel1.FK_Books_Publication", "Publication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("DBUniversityModel1.FK_Books_Publication", "Publication").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publication> PublicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publication>("DBUniversityModel1.FK_Books_Publication", "Publication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publication>("DBUniversityModel1.FK_Books_Publication", "Publication", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_Shelving", "Shelving")]
        public Shelving Shelving
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shelving>("DBUniversityModel1.FK_Books_Shelving", "Shelving").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shelving>("DBUniversityModel1.FK_Books_Shelving", "Shelving").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shelving> ShelvingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Shelving>("DBUniversityModel1.FK_Books_Shelving", "Shelving");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Shelving>("DBUniversityModel1.FK_Books_Shelving", "Shelving", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_Writer", "Writer")]
        public Writer Writer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Writer>("DBUniversityModel1.FK_Books_Writer", "Writer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Writer>("DBUniversityModel1.FK_Books_Writer", "Writer").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Writer> WriterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Writer>("DBUniversityModel1.FK_Books_Writer", "Writer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Writer>("DBUniversityModel1.FK_Books_Writer", "Writer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="EBook")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EBook : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта EBook.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static EBook CreateEBook(global::System.Int32 id)
        {
            EBook eBook = new EBook();
            eBook.id = id;
            return eBook;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> size
        {
            get
            {
                return _size;
            }
            set
            {
                OnsizeChanging(value);
                ReportPropertyChanging("size");
                _size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("size");
                OnsizeChanged();
            }
        }
        private Nullable<global::System.Int64> _size;
        partial void OnsizeChanging(Nullable<global::System.Int64> value);
        partial void OnsizeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String type
        {
            get
            {
                return _type;
            }
            set
            {
                OntypeChanging(value);
                ReportPropertyChanging("type");
                _type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("type");
                OntypeChanged();
            }
        }
        private global::System.String _type;
        partial void OntypeChanging(global::System.String value);
        partial void OntypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String adress
        {
            get
            {
                return _adress;
            }
            set
            {
                OnadressChanging(value);
                ReportPropertyChanging("adress");
                _adress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("adress");
                OnadressChanged();
            }
        }
        private global::System.String _adress;
        partial void OnadressChanging(global::System.String value);
        partial void OnadressChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_EBook", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("DBUniversityModel1.FK_Books_EBook", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("DBUniversityModel1.FK_Books_EBook", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Employee.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Employee CreateEmployee(global::System.Int32 id)
        {
            Employee employee = new Employee();
            employee.id = id;
            return employee;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patronymic
        {
            get
            {
                return _patronymic;
            }
            set
            {
                OnpatronymicChanging(value);
                ReportPropertyChanging("patronymic");
                _patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patronymic");
                OnpatronymicChanged();
            }
        }
        private global::System.String _patronymic;
        partial void OnpatronymicChanging(global::System.String value);
        partial void OnpatronymicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String permission
        {
            get
            {
                return _permission;
            }
            set
            {
                OnpermissionChanging(value);
                ReportPropertyChanging("permission");
                _permission = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("permission");
                OnpermissionChanged();
            }
        }
        private global::System.String _permission;
        partial void OnpermissionChanging(global::System.String value);
        partial void OnpermissionChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Employee", "Actions")]
        public EntityCollection<Actions> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Employee", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Employee", "Actions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Faculty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Faculty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Faculty.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Faculty CreateFaculty(global::System.Int32 id)
        {
            Faculty faculty = new Faculty();
            faculty.id = id;
            return faculty;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Group_Faculty", "Group")]
        public EntityCollection<Group> Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Group>("DBUniversityModel1.FK_Group_Faculty", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Group>("DBUniversityModel1.FK_Group_Faculty", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Teachers_Faculty", "Teachers")]
        public EntityCollection<Teachers> Teachers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Teachers>("DBUniversityModel1.FK_Teachers_Faculty", "Teachers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Teachers>("DBUniversityModel1.FK_Teachers_Faculty", "Teachers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Group.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Group CreateGroup(global::System.Int32 id)
        {
            Group group = new Group();
            group.id = id;
            return group;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_faculty
        {
            get
            {
                return _id_faculty;
            }
            set
            {
                Onid_facultyChanging(value);
                ReportPropertyChanging("id_faculty");
                _id_faculty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_faculty");
                Onid_facultyChanged();
            }
        }
        private Nullable<global::System.Int32> _id_faculty;
        partial void Onid_facultyChanging(Nullable<global::System.Int32> value);
        partial void Onid_facultyChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Group_Faculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("DBUniversityModel1.FK_Group_Faculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("DBUniversityModel1.FK_Group_Faculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("DBUniversityModel1.FK_Group_Faculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("DBUniversityModel1.FK_Group_Faculty", "Faculty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Student_Group", "Student")]
        public EntityCollection<Student> Student
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Student>("DBUniversityModel1.FK_Student_Group", "Student");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Student>("DBUniversityModel1.FK_Student_Group", "Student", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Publication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publication : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Publication.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Publication CreatePublication(global::System.Int32 id)
        {
            Publication publication = new Publication();
            publication.id = id;
            return publication;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_Publication", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("DBUniversityModel1.FK_Books_Publication", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("DBUniversityModel1.FK_Books_Publication", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Shelving")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shelving : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Shelving.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Shelving CreateShelving(global::System.Int32 id)
        {
            Shelving shelving = new Shelving();
            shelving.id = id;
            return shelving;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String subject
        {
            get
            {
                return _subject;
            }
            set
            {
                OnsubjectChanging(value);
                ReportPropertyChanging("subject");
                _subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("subject");
                OnsubjectChanged();
            }
        }
        private global::System.String _subject;
        partial void OnsubjectChanging(global::System.String value);
        partial void OnsubjectChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_Shelving", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("DBUniversityModel1.FK_Books_Shelving", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("DBUniversityModel1.FK_Books_Shelving", "Books", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Status")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Status : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Status.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Status CreateStatus(global::System.Int32 id)
        {
            Status status = new Status();
            status.id = id;
            return status;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status1
        {
            get
            {
                return _status1;
            }
            set
            {
                Onstatus1Changing(value);
                ReportPropertyChanging("status1");
                _status1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status1");
                Onstatus1Changed();
            }
        }
        private global::System.String _status1;
        partial void Onstatus1Changing(global::System.String value);
        partial void Onstatus1Changed();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Status", "Actions")]
        public EntityCollection<Actions> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Status", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Status", "Actions", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Student")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Student : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Student.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Student CreateStudent(global::System.Int32 id)
        {
            Student student = new Student();
            student.id = id;
            return student;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> course
        {
            get
            {
                return _course;
            }
            set
            {
                OncourseChanging(value);
                ReportPropertyChanging("course");
                _course = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("course");
                OncourseChanged();
            }
        }
        private Nullable<global::System.Int32> _course;
        partial void OncourseChanging(Nullable<global::System.Int32> value);
        partial void OncourseChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patronymic
        {
            get
            {
                return _patronymic;
            }
            set
            {
                OnpatronymicChanging(value);
                ReportPropertyChanging("patronymic");
                _patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patronymic");
                OnpatronymicChanged();
            }
        }
        private global::System.String _patronymic;
        partial void OnpatronymicChanging(global::System.String value);
        partial void OnpatronymicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_group
        {
            get
            {
                return _id_group;
            }
            set
            {
                Onid_groupChanging(value);
                ReportPropertyChanging("id_group");
                _id_group = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_group");
                Onid_groupChanged();
            }
        }
        private Nullable<global::System.Int32> _id_group;
        partial void Onid_groupChanging(Nullable<global::System.Int32> value);
        partial void Onid_groupChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_faculty
        {
            get
            {
                return _id_faculty;
            }
            set
            {
                Onid_facultyChanging(value);
                ReportPropertyChanging("id_faculty");
                _id_faculty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_faculty");
                Onid_facultyChanged();
            }
        }
        private Nullable<global::System.Int32> _id_faculty;
        partial void Onid_facultyChanging(Nullable<global::System.Int32> value);
        partial void Onid_facultyChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Student", "Actions")]
        public EntityCollection<Actions> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Student", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Student", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Student_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DBUniversityModel1.FK_Student_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DBUniversityModel1.FK_Student_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("DBUniversityModel1.FK_Student_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("DBUniversityModel1.FK_Student_Group", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sysdiagrams.
        /// </summary>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="principal_id">Исходное значение свойства principal_id.</param>
        /// <param name="diagram_id">Исходное значение свойства diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Teachers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teachers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Teachers.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Teachers CreateTeachers(global::System.Int32 id)
        {
            Teachers teachers = new Teachers();
            teachers.id = id;
            return teachers;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patronymic
        {
            get
            {
                return _patronymic;
            }
            set
            {
                OnpatronymicChanging(value);
                ReportPropertyChanging("patronymic");
                _patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patronymic");
                OnpatronymicChanged();
            }
        }
        private global::System.String _patronymic;
        partial void OnpatronymicChanging(global::System.String value);
        partial void OnpatronymicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> id_faculty
        {
            get
            {
                return _id_faculty;
            }
            set
            {
                Onid_facultyChanging(value);
                ReportPropertyChanging("id_faculty");
                _id_faculty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("id_faculty");
                Onid_facultyChanged();
            }
        }
        private Nullable<global::System.Int32> _id_faculty;
        partial void Onid_facultyChanging(Nullable<global::System.Int32> value);
        partial void Onid_facultyChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Actions_Teacher", "Actions")]
        public EntityCollection<Actions> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Teacher", "Actions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Actions>("DBUniversityModel1.FK_Actions_Teacher", "Actions", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Teachers_Faculty", "Faculty")]
        public Faculty Faculty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("DBUniversityModel1.FK_Teachers_Faculty", "Faculty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("DBUniversityModel1.FK_Teachers_Faculty", "Faculty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Faculty> FacultyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Faculty>("DBUniversityModel1.FK_Teachers_Faculty", "Faculty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Faculty>("DBUniversityModel1.FK_Teachers_Faculty", "Faculty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBUniversityModel1", Name="Writer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Writer : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Writer.
        /// </summary>
        /// <param name="id">Исходное значение свойства id.</param>
        public static Writer CreateWriter(global::System.Int32 id)
        {
            Writer writer = new Writer();
            writer.id = id;
            return writer;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String surname
        {
            get
            {
                return _surname;
            }
            set
            {
                OnsurnameChanging(value);
                ReportPropertyChanging("surname");
                _surname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("surname");
                OnsurnameChanged();
            }
        }
        private global::System.String _surname;
        partial void OnsurnameChanging(global::System.String value);
        partial void OnsurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String patronymic
        {
            get
            {
                return _patronymic;
            }
            set
            {
                OnpatronymicChanging(value);
                ReportPropertyChanging("patronymic");
                _patronymic = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("patronymic");
                OnpatronymicChanged();
            }
        }
        private global::System.String _patronymic;
        partial void OnpatronymicChanging(global::System.String value);
        partial void OnpatronymicChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBUniversityModel1", "FK_Books_Writer", "Books")]
        public EntityCollection<Books> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Books>("DBUniversityModel1.FK_Books_Writer", "Books");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Books>("DBUniversityModel1.FK_Books_Writer", "Books", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
